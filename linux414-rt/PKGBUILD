# Based on the file created for Arch Linux by:
# Tobias Powalowski <tpowa@archlinux.org>
# Thomas Baechler <thomas@archlinux.org>

# Maintainer: Bernhard Landauer <oberon@manjaro.org>
# Maintainer: Philip MÃ¼ller <philm@manjaro.org>

pkgbase=linux414-rt
pkgname=("$pkgbase" "$pkgbase-headers")
_basekernel=4.14
_sub=40
_rtpatchver=rt30
_bfq=v8r12
_bfqdate=20171108
_bfqdate2=20180404
_basever=${pkgbase//linux}
_kernelname=-MANJARO
_pkgver=${_basekernel}.${_sub}
pkgver=${_pkgver}_${_rtpatchver}
pkgrel=2
arch=('x86_64')
url="http://www.kernel.org/"
license=('GPL2')
makedepends=('bc'
    'docbook-xsl'
    'elfutils'
    'git'
    'inetutils'
    'kmod'
    'xmlto')
options=('!strip')
source=("https://www.kernel.org/pub/linux/kernel/v4.x/linux-${_basekernel}.tar.xz"
        # upstream patch
        "http://www.kernel.org/pub/linux/kernel/v4.x/patch-${_pkgver}.xz"
        # gcc8 ojtool patches
        '0001-objtool_Fix_noreturn_detection_for_recursive_sibling_calls.patch'
        '0002-objtool_support_GCC8_cold_subfunctions.patch'
        '0003-objtool_support_GCC8_switch_tables.patch'
        # rt-config
        'config.rt'
        # config for mkinitcpio ramdisk
        "${pkgbase}.preset"
        # depmod hooktcp
        '60-linux.hook'
        # initramfs regeneration hook
        '90-linux.hook'
        # BFQ patches
        0001-BFQ-${_bfq}-${_bfqdate}.patch
        0002-BFQ-${_bfq}-${_bfqdate2}.patch
        # ARCH Patches
        0001-add-sysctl-to-disallow-unprivileged-CLONE_NEWUSER-by.patch
        # MANJARO Patches
        '0001-drm-i915-edp-Only-use-the-alternate-fixed-mode-if-it.patch::https://bugs.freedesktop.org/attachment.cgi?id=135277'
        '0001-synaptics-lenovo-t460p.patch::https://github.com/torvalds/linux/commit/48282969826b3d3c76e908182f69724d86d995fe.patch'
        '0001-Revert-Bluetooth-btusb-Fix-quirk-for-Atheros-1525-QCA6174.patch'
        '0002-Bluetooth-btusb-Apply-QCQ_ROME-setup-for-BTUSB_ATH30.patch'
        '0001-iwlwifi-killer-ac-1550.patch'
        # Zen temperature
        '0001-zen-temp.patch::https://patchwork.kernel.org/patch/9941409/raw/'
        '0002-zen-temp.patch::https://patchwork.kernel.org/patch/9941421/raw/'
        '0003-zen-temp.patch::https://patchwork.kernel.org/patch/9941427/raw/'
        # Bootsplash
        '0001-bootsplash.patch::https://patchwork.kernel.org/patch/10171593/raw/'
        '0002-bootsplash.patch::https://patchwork.kernel.org/patch/10171611/raw/'
        '0003-bootsplash.patch::https://patchwork.kernel.org/patch/10171573/raw/'
        '0004-bootsplash.patch::https://patchwork.kernel.org/patch/10171613/raw/'
        '0005-bootsplash.patch::https://patchwork.kernel.org/patch/10171595/raw/'
        '0006-bootsplash.patch::https://patchwork.kernel.org/patch/10171583/raw/'
        '0007-bootsplash.patch::https://patchwork.kernel.org/patch/10171601/raw/'
        '0008-bootsplash.patch::https://patchwork.kernel.org/patch/10171567/raw/'
        '0009-bootsplash.patch::https://patchwork.kernel.org/patch/10171603/raw/'
        '0010-bootsplash.patch::https://patchwork.kernel.org/patch/10171585/raw/'
        '0011-bootsplash.patch::https://patchwork.kernel.org/patch/10171577/raw/'
        '0012-bootsplash.patch::https://patchwork.kernel.org/patch/10171569/raw/'
        '0013-bootsplash.patch::https://patchwork.kernel.org/patch/10171575/raw/'
        # RT Patch
        https://www.kernel.org/pub/linux/kernel/projects/rt/${_basekernel}/older/patch-${_pkgver}-${_rtpatchver}.patch.{xz,sign}
        'fix-race-in-PRT-wait-for-completion-simple-wait-code_Nvidia-RT-160319.patch')
sha256sums=('f81d59477e90a130857ce18dc02f4fbe5725854911db1e7ba770c7cd350f96a7'
            '128ee971b97421aea56ddf093d860586054419b166a7a21a55a4389bd4dbbb2f'
            '0d2ac82871694368a563f6082ffffc891cbbb7a5a16ca1d18792fdda95ed4840'
            '46d7929976781187de803b1d600e7e5577d633b0c9ae4e6e222801e9787594a1'
            '94b1f14b4cdb336556e23d4c737e9a805c798380508a75c18c23a5a7ff11eda8'
            '6da6b599086cf8c124fa6db275eae24deff7c495c2f2b728b02018aaabe9eb2e'
            '0fb6d51e5d8cd1dc737104c2d1487a38ff7cb50b1f8cce74e1776caa2d51490b'
            'ae2e95db94ef7176207c690224169594d49445e04249d2499e9d2fbc117a0b21'
            '057ef44a8f5a7ef10efbc7d96bf72f651e87a0c1d063b07d922c74232e5e7941'
            '5ac0d9fb774ed038c5537c59836b389bb64bdb50a01f32d0ee8ae03159ca9198'
            'f51c1b8709bf9f0e642ebd12d48ee1ac41047902a87cf6a783ca794cfa5142dc'
            '37b86ca3de148a34258e3176dbf41488d9dbd19e93adbd22a062b3c41332ce85'
            'c08d12c699398ef88b764be1837b9ee11f2efd3188bd1bf4e8f85dfbeee58148'
            '2fc534377b4059faa3291a93f193f77f44e7a20237d8c4528d8828f48fc94c7f'
            'b7fc4332fb091e30bd79d64ccf7b41f54b2cb33b4011e962dd6d95c9be98e4dd'
            '61abfab9093bdfec4edda3586fd05afe2f488a92ca99cff51c36b359acdcc815'
            '0e0d8f32ef3a62d448c2d570992de862cbe9630f0fd803f83390aba9279e7106'
            'ee46e4c25b58d1dbd7db963382cf37aeae83dd0b4c13a59bdd11153dc324d8e8'
            'cd463af7193bcf864c42e95d804976a627ac11132886f25e04dfc2471c28bf6c'
            '70cee696fb4204ac7f787cef0742c50637e8bb7f68e2c7bca01aeefff32affc8'
            'a504f6cf84094e08eaa3cc5b28440261797bf4f06f04993ee46a20628ff2b53c'
            'e096b127a5208f56d368d2cb938933454d7200d70c86b763aa22c38e0ddb8717'
            '8c1c880f2caa9c7ae43281a35410203887ea8eae750fe8d360d0c8bf80fcc6e0'
            '1144d51e5eb980fceeec16004f3645ed04a60fac9e0c7cf88a15c5c1e7a4b89e'
            'dd4b69def2efacf4a6c442202ad5cb93d492c03886d7c61de87696e5a83e2846'
            'c8f9cd8ffdbc49d1d02852409b2532247f1deef2472566c1d16b52af744532cd'
            'c8b0cb231659d33c3cfaed4b1f8d7c8305ab170bdd4c77fce85270d7b6a68000'
            '8dbb5ab3cb99e48d97d4e2f2e3df5d0de66f3721b4f7fd94a708089f53245c77'
            'a7aefeacf22c600fafd9e040a985a913643095db7272c296b77a0a651c6a140a'
            'e9f22cbb542591087d2d66dc6dc912b1434330ba3cd13d2df741d869a2c31e89'
            '27471eee564ca3149dd271b0817719b5565a9594dc4d884fe3dc51a5f03832bc'
            '60e295601e4fb33d9bf65f198c54c7eb07c0d1e91e2ad1e0dd6cd6e142cb266d'
            '035ea4b2a7621054f4560471f45336b981538a40172d8f17285910d4e0e0b3ef'
            'bd28eeaf487a7dde3a6dd061972ecaa00336c6236a04ae412d954260e089df75'
            'SKIP'
            '85f7612edfa129210343d6a4fe4ba2a4ac3542d98b7e28c8896738e7e6541c06')
validpgpkeys=('64254695FFF0AA4466CC19E67B96E8162A8CF5D1' # Sebastian Andrzej Siewior
            '4FE5E3262872E4CC'
            '5ED9A48FC54C0A22D1D0804CEBC26CDB5A56DE73' # Steven Rostedt
            )

prepare() {
  cd "linux-${_basekernel}"

  # add upstream patch
  msg "upstream mainline patch..."
  patch -p1 -i "../patch-${_pkgver}"
  chmod +x tools/objtool/sync-check.sh # GNU patch doesn't support git-style file mode

  # gcc8 ojtool patches
  msg "gcc8 objtool patches..."
  patch -p1 -i '../0001-objtool_Fix_noreturn_detection_for_recursive_sibling_calls.patch'
  patch -p1 -i '../0002-objtool_support_GCC8_cold_subfunctions.patch'
  patch -p1 -i '../0003-objtool_support_GCC8_switch_tables.patch'

  # Add RT patch
  msg "realtime patch..."
  patch -p1 -i "../patch-${_pkgver}-${_rtpatchver}.patch"
  # fix X hanging on certain NVIDIA cards
  msg "NVIDIA race in PRT patch..."
  patch -p1 -i '../fix-race-in-PRT-wait-for-completion-simple-wait-code_Nvidia-RT-160319.patch'

  # https://bugs.freedesktop.org/show_bug.cgi?id=103497
  msg "drm-i915-edp patch..."
  patch -Np1 -i ../0001-drm-i915-edp-Only-use-the-alternate-fixed-mode-if-it.patch

  msg "synaptics-lenovo patch..."
  patch -Np1 -i ../0001-synaptics-lenovo-t460p.patch

  # https://bugzilla.kernel.org/show_bug.cgi?id=199271
  msg "Bluetooth btusb patches"
  patch -Np1 -i '../0001-Revert-Bluetooth-btusb-Fix-quirk-for-Atheros-1525-QCA6174.patch'
  patch -Np1 -i '../0002-Bluetooth-btusb-Apply-QCQ_ROME-setup-for-BTUSB_ATH30.patch'

  # iwlwifi: add killer cards for 9000 series
  # https://forum.manjaro.org/t/46167
  msg "iwlwifi-killer-ac-1550 patch"
  patch -Np1 -i '../0001-iwlwifi-killer-ac-1550.patch'

  # disable USER_NS for non-root users by default
  msg "disallow-unprivileged-CLONE_NEWUSER patch..."
  patch -Np1 -i '../0001-add-sysctl-to-disallow-unprivileged-CLONE_NEWUSER-by.patch'

  # Add support for temperature sensors on Family 17h (Ryzen) processors.
  msg "zen temp patches..."
  patch -Np1 -i '../0001-zen-temp.patch'
  patch -Np1 -i '../0002-zen-temp.patch'
  patch -Np1 -i '../0003-zen-temp.patch'

  # Add bootsplash - http://lkml.iu.edu/hypermail/linux/kernel/1710.3/01542.html
  msg "bootsplash patches..."
  patch -Np1 -i '../0001-bootsplash.patch'
  patch -Np1 -i '../0002-bootsplash.patch'
  patch -Np1 -i '../0003-bootsplash.patch'
  patch -Np1 -i '../0004-bootsplash.patch'
  patch -Np1 -i '../0005-bootsplash.patch'
  patch -Np1 -i '../0006-bootsplash.patch'
  patch -Np1 -i '../0007-bootsplash.patch'
  patch -Np1 -i '../0008-bootsplash.patch'
  patch -Np1 -i '../0009-bootsplash.patch'
  patch -Np1 -i '../0010-bootsplash.patch'
  patch -Np1 -i '../0011-bootsplash.patch'
  patch -Np1 -i '../0012-bootsplash.patch'
  # use git-apply to add binary files
  git apply -p1 < '../0013-bootsplash.patch'

  # add BFQ scheduler
  msg "Fix naming schema in BFQ-MQ patch"
  sed -i -e "s|SUBLEVEL = 0|SUBLEVEL = ${_sub}|g" \
      -i -e "s|EXTRAVERSION = -rc8|EXTRAVERSION =|g" \
      -i -e "s|EXTRAVERSION = -rc8-bfq-mq|EXTRAVERSION =|g" \
      -i -e "s|NAME = Fearless Coyote|NAME = Petit Gorille|g" \
      "../0001-BFQ-${_bfq}-${_bfqdate}.patch"
  msg "BFQ patches..."
  patch -Np1 -i "../0001-BFQ-${_bfq}-${_bfqdate}.patch"
  patch -Np1 -i "../0002-BFQ-${_bfq}-${_bfqdate2}.patch"

  msg "All patches applied successfully."

  msg "kernel config..."
  # kernel config
  cat '../config.rt' >> ./.config

  # set extraversion to pkgrel
  sed -ri "s|^(EXTRAVERSION =).*|\1 |" Makefile

  # don't run depmod on 'make install'. We'll do this ourselves in packaging
  sed -i '2iexit 0' scripts/depmod.sh

  # get kernel version
  make prepare

  # rewrite configuration
  yes "" | make config >/dev/null
}

build() {
  cd "${srcdir}/linux-${_basekernel}"

  # build!
  make ${MAKEFLAGS} LOCALVERSION= bzImage modules
}

package_linux414-rt() {
  pkgdesc="The ${pkgbase/linux/Linux} kernel and modules"
  depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
  optdepends=('crda: to set the correct wireless channels of your country')
  provides=("linux=${pkgver}")
  backup=("etc/mkinitcpio.d/${pkgbase}.preset")
  install=${pkgname}.install

  cd "${srcdir}/linux-${_basekernel}"

  # get kernel version
  _kernver="$(make LOCALVERSION= kernelrelease)"

  mkdir -p "${pkgdir}"/{boot,usr/lib/modules}
  make LOCALVERSION= INSTALL_MOD_PATH="${pkgdir}/usr" modules_install
  cp arch/x86/boot/bzImage "${pkgdir}/boot/vmlinuz-${_basekernel}-rt-x86_64"

  # add kernel version
  echo "${_pkgver}-${_rtpatchver}-${pkgrel}-MANJARO x64" > "${pkgdir}/boot/linux-${_basever}-x86_64.kver"

  # make room for external modules
  local _extramodules="extramodules-${_basekernel}-rt${_kernelname:--MANJARO}"
  ln -s "../${_extramodules}" "${pkgdir}/usr/lib/modules/${_kernver}/extramodules"

  # add real version for building modules and running depmod from hook
  echo "${_kernver}" |
    install -Dm644 /dev/stdin "${pkgdir}/usr/lib/modules/${_extramodules}/version"

  # remove build and source links
  rm "${pkgdir}"/usr/lib/modules/${_kernver}/{source,build}

  # now we call depmod...
  depmod -b "${pkgdir}/usr" -F System.map "${_kernver}"

  # add vmlinux
  install -Dt "${pkgdir}/usr/lib/modules/${_kernver}/build" -m644 vmlinux

  # sed expression for following substitutions
  local _subst="
    s|%PKGBASE%|${pkgbase}|g
    s|%BASEKERNEL%|${_basekernel}|g
    s|%ARCH%|x86_64|g
    s|%KERNVER%|${_kernver}|g
    s|%EXTRAMODULES%|${_extramodules}|g
  "

  # hack to allow specifying an initially nonexisting install file
  sed "${_subst}" "${startdir}/${install}" > "${startdir}/${install}.pkg"
  true && install=${install}.pkg

  # install mkinitcpio preset file
  sed "${_subst}" ${srcdir}/${pkgbase}.preset |
    install -Dm644 /dev/stdin "${pkgdir}/etc/mkinitcpio.d/${pkgbase}.preset"

  # install pacman hooks
  sed "${_subst}" ${srcdir}/60-linux.hook |
    install -Dm644 /dev/stdin "${pkgdir}/usr/share/libalpm/hooks/60-${pkgbase}.hook"
  sed "${_subst}" ${srcdir}/90-linux.hook |
    install -Dm644 /dev/stdin "${pkgdir}/usr/share/libalpm/hooks/90-${pkgbase}.hook"
}

package_linux414-rt-headers() {
  pkgdesc="Header files and scripts for building modules for ${pkgbase/linux/Linux} kernel"
  provides=("linux-headers=${pkgver}")

  cd "${srcdir}/linux-${_basekernel}"
  local _builddir="${pkgdir}/usr/lib/modules/${_kernver}/build"

  install -Dt "${_builddir}" -m644 Makefile .config Module.symvers
  install -Dt "${_builddir}/kernel" -m644 kernel/Makefile

  mkdir "${_builddir}/.tmp_versions"

  cp -t "${_builddir}" -a include scripts

  install -Dt "${_builddir}/arch/x86" -m644 "arch/x86/Makefile"
  install -Dt "${_builddir}/arch/x86/kernel" -m644 "arch/x86/kernel/asm-offsets.s"

  cp -t "${_builddir}/arch/x86" -a "arch/x86/include"

  install -Dt "${_builddir}/drivers/md" -m644 drivers/md/*.h
  install -Dt "${_builddir}/net/mac80211" -m644 net/mac80211/*.h

  # http://bugs.archlinux.org/task/9912
  install -Dt "${_builddir}/drivers/media/dvb-core" -m644 drivers/media/dvb-core/*.h

  # http://bugs.archlinux.org/task/13146
  install -Dt "${_builddir}/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

  # http://bugs.archlinux.org/task/20402
  install -Dt "${_builddir}/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
  install -Dt "${_builddir}/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
  install -Dt "${_builddir}/drivers/media/tuners" -m644 drivers/media/tuners/*.h

  # add xfs and shmem for aufs building
  mkdir -p "${_builddir}"/{fs/xfs,mm}

  # copy in Kconfig files
  find . -name Kconfig\* -exec install -Dm644 {} "${_builddir}/{}" \;

  # add objtool for external module building and enabled VALIDATION_STACK option
  install -Dt "${_builddir}/tools/objtool" tools/objtool/objtool

  # remove unneeded architectures
  local _arch
  for _arch in "${_builddir}"/arch/*/; do
    [[ ${_arch} == */x86/ ]] && continue
    rm -r "${_arch}"
  done

  # remove files already in linux-docs package
  rm -r "${_builddir}/Documentation"

  # Fix permissions
  chmod -R u=rwX,go=rX "${_builddir}"

  # strip scripts directory
  local _binary _strip
  while read -rd '' _binary; do
    case "$(file -bi "${_binary}")" in
      *application/x-sharedlib*)  _strip="${STRIP_SHARED}"   ;; # Libraries (.so)
      *application/x-archive*)    _strip="${STRIP_STATIC}"   ;; # Libraries (.a)
      *application/x-executable*) _strip="${STRIP_BINARIES}" ;; # Binaries
      *) continue ;;
    esac
    /usr/bin/strip ${_strip} "${_binary}"
  done < <(find "${_builddir}/scripts" -type f -perm -u+w -print0 2>/dev/null)
}
